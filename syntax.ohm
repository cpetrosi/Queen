QUEEN {
    Program = (FunDecl)+
    FunDecl = "👑" Type "(" (id ":" Type)+ ")" "🚀" Body
    Body = Exp                          --exp
           | Let                        --let
    Exp = "🖨" stringlit                --print
          | Binexp                      --binexp
          |
          | Conditional                 --conditional
          | Match                       --match
          | Let                         --let
          | "(" Exp ")"                 --parens
          | id "⚡️" id                  --cons
          | "🕳"                        --wild
          | id                          --id
          | boollit                     --bool
          | stringlit                   --string
          | numlit                      --numlit
    Match = "match" id "with" ("🍭" Exp "->" Exp)+
    Let = "let" id "🚀" Exp "in" Let   --let
        | Exp                    --exp
    Binexp = Exp1 addop Binexp           --add
           | Exp1                     --exp
    Exp1 = Exp2 mulop Exp1             --mult
         | Exp2                      --exp
    Exp2 = "-"? Exp3
    Exp3 = numlit("!")?
    Conditional = "🤔" Exp "then" Exp ("else🤔" Exp "then" Exp)* ("else" Exp)?
    Type = Type "list"              --list
         | Type "*" Type            --tuple
         | "bool"                   --bool
         | "int"                    --int
         | "float"                  --float
         | "string"                 --string
         | id                       --id
    boollit = "true"                   --true
           | "false"                   --false
    id = ~keyword letter idrest*
    idrest = letter                    --ltr
             | digit                   --dgt
             | "_"                     --underscore
             | "$"                     --dollar
    keyword = ("👑" | "🚀" | "🖨" | "⚡️" | "🕳" | "match" | "with" | "🍭" | "->" | "let" | "in" | "🤔" | "else🤔" | "then" | "else" | "true" | "false") ~idrest
    char =  escape
            |  ~"\\" ~"\"" ~"\'" ~"\\n" any
    escape =  "\\\\" | "\\\"" | "\\'" | "\\n" | "\\t"
              |  "\\u{" hexDigit+ "}"   --codepoint
    charlit =  "'" (char | "\"") "'"
    stringlit =  "\"" (char | "\'")* "\""
    numlit = digit+ ("."digit+)? ("^"digit+)?
    addop = "+"                        --add
            | "-"                      --sub
    mulop = "*"                        --mult
            | "/"                      --div
    comment = "//" (~"\n" any)* "\n"
}
