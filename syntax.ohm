QUEEN {
    Program = (FunDecl)+
    FunDecl = "👑" Type id ("(" Binding+ ")")? "🚀" Body
    Binding = (id ":" Type)
    Body = Exp
         | Let
         | Funcall
    Exp = "🖨" (stringlit | id)       --print
        | Binexp                      --binexp
        | Append                      --append
        | Conditional                 --conditional
        | Match                       --match
        | Let                         --let
        | "(" Exp ")"                 --parens
        | id                          --id
        | boollit                     --bool
        | stringlit                   --string
        | numlit                      --numlit
    Pattern = Cons                    --cons
            | "🕳"                    --wild
            | "[" patternElements (";" patternElements)* "]"      --pattern
    Cons = "[]"                         --nil
         | listElement "⚡️" "[]"                 --short
         | listElement ("⚡️" Cons)*              --long
    Funcall = id "(" (id ",")+ ")"
    patternElements = numlit | id
    List = "[" listElement ("," listElement)* "]"
    listElement = numlit | stringlit | id
    Match = "match" id "with" MatchExp+
    MatchExp = "🍭" Pattern "->" Exp
    Let = "let" id "🚀" Exp ("in" Let)?   --let
        | Exp                             --exp
    Append = List "@" List
    Binexp = Exp1 addop Binexp            --add
           | Exp1                         --exp
    Exp1 = Exp2 mulop Exp1                --mult
         | Exp2                           --exp
    Exp2 = "-"? Exp3
    Exp3 = (numlit| id)("!")?
    Conditional = "🤔" Exp (logical Exp)* "then" Exp ("else🤔" Exp (logical Exp)* "then" Exp)* ("else" Exp)?
    logical = "👍" | "🖕"
    Type = Type "list"              --list
         | Type "*" Type            --tuple
         | "bool"                   --bool
         | "int"                    --int
         | "float"                  --float
         | "string"                 --string
    boollit = "true" | "false"
    id = ~keyword letter idrest*
    idrest = letter               --ltr
           | digit                --dgt
           | "_"                  --underscore
           | "$"                  --dollar
    keyword = ("👑" | "🚀" | "🖨" | "⚡️" | "🕳" | "match" | "with" | "🍭" | "->" | "let" | "in"
            | "🤔" | "else🤔" | "then" | "else" | "true" | "false"| "👍" | "🖕") ~idrest
    char =  escape
         |  ~"\\" ~"\"" ~"\'" ~"\\n" any
    escape =  "\\\\" | "\\\"" | "\\'" | "\\n" | "\\t"
           |  "\\u{" hexDigit+ "}"     --codepoint
    charlit =  "'" (char | "\"") "'"
    stringlit =  "\"" (char | "\'")* "\""
    numlit = digit+ ("."digit+)? ("^"digit+)?
    addop = "+"                        --add
          | "-"                        --sub
    mulop = "*"                        --mult
          | "/"                        --div
    comment = "//" (~"\n" any)* "\n"
}
